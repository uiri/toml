from typing import Any, IO, Mapping, MutableMapping, Optional, Type, Union
import datetime


class TomlDecodeError(Exception): ...

class TomlTz(datetime.tzinfo):
    def __init__(self, toml_offset: str) -> None: ...

class TomlDecoder(object):...

class TomlEncoder(object):...

class TomlPreserveCommentDecoder(TomlDecoder):...

class TomlPreserveCommentEncoder(TomlEncoder):...

def load(f: Union[str, list, IO[str]],
         _dict: Type[MutableMapping[str, Any]] = ...) \
         -> MutableMapping[str, Any]: ...
def loads(s: str, _dict: Type[MutableMapping[str, Any]] = ...) \
          -> MutableMapping[str, Any]: ...

def dump(o: Mapping[str, Any], f: IO[str]) -> str: ...
def dumps(o: Mapping[str, Any]) -> str: ...
